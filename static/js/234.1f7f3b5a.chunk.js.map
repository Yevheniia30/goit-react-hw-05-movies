{"version":3,"file":"static/js/234.1f7f3b5a.chunk.js","mappings":"4PACA,GAAgB,IAAM,qBAAqB,KAAO,uB,mBC8ClD,EAzCgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QACAE,GAAaC,EAAAA,EAAAA,KAAbD,SAgBR,OAbAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,mCAAG,8GAEDC,EAAAA,EAAAA,IAAmBN,EAASE,GAF3B,OAEdK,EAFc,OAIpBR,EAAWQ,GAJS,gDAMpBC,QAAQC,IAAR,MANoB,yDAAH,qDASrBJ,MACC,CAACL,EAASE,KAGX,8BACIJ,EAAQY,QAGR,eAAIC,UAAWC,EAAAA,KAAf,SACGd,EAAQe,KAAI,SAAAC,GAAI,OACf,gBAAkBH,UAAWC,EAAAA,IAA7B,WACE,0BACE,iBAAMD,UAAWC,EAAAA,KAAjB,SAA0BE,EAAKC,SADjC,UACuD,IACpDD,EAAKE,WAAWC,MAAM,EAAG,IAF5B,QAIA,uBAAIH,EAAKI,YALFJ,EAAKK,UAJlB,6D,6NC1BFC,EAAM,mCAENC,EAAWC,IAAAA,OAAa,CAC5BC,QAAS,iCAMEC,EAAY,mCAAG,WAAMtB,GAAN,yFACHmB,EAASI,IAAT,sCAA4CL,GAAO,CACxEM,OAAQ,CACNxB,SAAAA,KAHsB,uBAClBK,EADkB,EAClBA,KADkB,kBAOnBA,EAAKoB,SAPc,2CAAH,sDAUZC,EAAe,mCAAG,WAAOT,EAAIjB,GAAX,yFACNmB,EAASI,IAAT,iBAAuBN,EAAvB,oBAAqCC,GAAO,CACjEM,OAAQ,CACNxB,SAAAA,KAHyB,uBACrBK,EADqB,EACrBA,KADqB,kBAOtBA,GAPsB,2CAAH,wDAUfsB,EAAkB,mCAAG,WAAOC,EAAO5B,GAAd,yFACTmB,EAASI,IAAT,gCAAsCL,GAAO,CAClEM,OAAQ,CAAEI,MAAAA,EAAO5B,SAAAA,KAFa,uBACxBK,EADwB,EACxBA,KADwB,kBAKzBA,EAAKoB,SALoB,2CAAH,wDAQlBI,EAAe,mCAAG,WAAOZ,EAAIjB,GAAX,yFACNmB,EAASI,IAAT,iBAAuBN,EAAvB,4BAA6CC,GAAO,CACzEM,OAAQ,CACNxB,SAAAA,KAHyB,uBACrBK,EADqB,EACrBA,KADqB,kBAOtBA,EAAKyB,MAPiB,2CAAH,wDAUf1B,EAAkB,mCAAG,WAAOa,EAAIjB,GAAX,yFACTmB,EAASI,IAAT,iBAAuBN,EAAvB,4BAA6CC,GAAO,CACzEM,OAAQ,CAAExB,SAAAA,KAFoB,uBACxBK,EADwB,EACxBA,KADwB,kBAKzBA,EAAKoB,SALoB,2CAAH,wDAQ/BrB,EAAmB2B,UAAY,CAC7Bd,GAAIe,IAAAA,KAAAA","sources":["webpack://goit-react-hw-05-movies/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"rew\":\"Reviews_rew__BfjKk\",\"name\":\"Reviews_name__kx3f+\"};","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getMovieReviewsReq } from 'services/api';\nimport s from './Reviews.module.css';\nimport { useLang } from 'hooks/useInterface';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n\n  const { movieId } = useParams();\n  const { language } = useLang();\n  // console.log('movieId', movieId);\n\n  useEffect(() => {\n    const getMovieReviews = async () => {\n      try {\n        const data = await getMovieReviewsReq(movieId, language);\n        // console.log('data', data);\n        setReviews(data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getMovieReviews();\n  }, [movieId, language]);\n\n  return (\n    <>\n      {!reviews.length ? (\n        <p>This movie has no reviews yet</p>\n      ) : (\n        <ul className={s.cast}>\n          {reviews.map(item => (\n            <li key={item.id} className={s.rew}>\n              <p>\n                <span className={s.name}>{item.author}</span> posted{' '}\n                {item.created_at.slice(0, 10)}:\n              </p>\n              <p>{item.content}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\nimport PropTypes from 'prop-types';\n\nconst key = 'c4360f2fc66490777a6befee451fce21';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  // params: {\n  //   language: 'uk',\n  // },\n});\n\nexport const getMoviesReq = async language => {\n  const { data } = await instance.get(`/trending/movie/day?api_key=${key}`, {\n    params: {\n      language,\n    },\n  });\n  // console.log('data', data);\n  return data.results;\n};\n\nexport const getMovieByIdReq = async (id, language) => {\n  const { data } = await instance.get(`/movie/${id}?api_key=${key}`, {\n    params: {\n      language,\n    },\n  });\n  // console.log('data mivie by id', data);\n  return data;\n};\n\nexport const getMoviesSearchReq = async (query, language) => {\n  const { data } = await instance.get(`/search/movie?api_key=${key}`, {\n    params: { query, language },\n  });\n  // console.log('data', data);\n  return data.results;\n};\n\nexport const getMovieCastReq = async (id, language) => {\n  const { data } = await instance.get(`/movie/${id}/credits?api_key=${key}`, {\n    params: {\n      language,\n    },\n  });\n  // console.log('data', data);\n  return data.cast;\n};\n\nexport const getMovieReviewsReq = async (id, language) => {\n  const { data } = await instance.get(`/movie/${id}/reviews?api_key=${key}`, {\n    params: { language },\n  });\n  // console.log('data', data);\n  return data.results;\n};\n\ngetMovieReviewsReq.propTypes = {\n  id: PropTypes.func.isRequired,\n};\n"],"names":["useState","reviews","setReviews","movieId","useParams","language","useLang","useEffect","getMovieReviews","getMovieReviewsReq","data","console","log","length","className","s","map","item","author","created_at","slice","content","id","key","instance","axios","baseURL","getMoviesReq","get","params","results","getMovieByIdReq","getMoviesSearchReq","query","getMovieCastReq","cast","propTypes","PropTypes"],"sourceRoot":""}