{"version":3,"file":"static/js/234.60fd292c.chunk.js","mappings":"4PACA,GAAgB,IAAM,qBAAqB,KAAO,uB,SC4ClD,EAxCgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAgBR,OAbAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,mCAAG,8GAEDC,EAAAA,EAAAA,IAAmBJ,GAFlB,OAEdK,EAFc,OAIpBN,EAAWM,GAJS,gDAMpBC,QAAQC,IAAR,MANoB,yDAAH,qDASrBJ,MACC,CAACH,KAGF,8BACIF,EAAQU,QAGR,eAAIC,UAAWC,EAAAA,KAAf,SACGZ,EAAQa,KAAI,SAAAC,GAAI,OACf,gBAAkBH,UAAWC,EAAAA,IAA7B,WACE,0BACE,iBAAMD,UAAWC,EAAAA,KAAjB,SAA0BE,EAAKC,SADjC,UACuD,IACpDD,EAAKE,WAAWC,MAAM,EAAG,IAF5B,QAIA,uBAAIH,EAAKI,YALFJ,EAAKK,UAJlB,6D,6NCxBFC,EAAM,mCAENC,EAAWC,IAAAA,OAAa,CAC5BC,QAAS,iCAGEC,EAAY,mCAAG,sGACHH,EAASI,IAAT,sCAA4CL,IADzC,uBAClBb,EADkB,EAClBA,KADkB,kBAGnBA,EAAKmB,SAHc,2CAAH,qDAMZC,EAAe,mCAAG,WAAMR,GAAN,yFACNE,EAASI,IAAT,iBAAuBN,EAAvB,oBAAqCC,IAD/B,uBACrBb,EADqB,EACrBA,KADqB,kBAGtBA,GAHsB,2CAAH,sDAMfqB,EAAkB,mCAAG,WAAMC,GAAN,yFACTR,EAASI,IAAT,gCAAsCL,GAAO,CAClEU,OAAQ,CAAED,MAAAA,KAFoB,uBACxBtB,EADwB,EACxBA,KADwB,kBAKzBA,EAAKmB,SALoB,2CAAH,sDAQlBK,EAAe,mCAAG,WAAMZ,GAAN,yFACNE,EAASI,IAAT,iBAAuBN,EAAvB,4BAA6CC,IADvC,uBACrBb,EADqB,EACrBA,KADqB,kBAGtBA,EAAKyB,MAHiB,2CAAH,sDAMf1B,EAAkB,mCAAG,WAAMa,GAAN,yFACTE,EAASI,IAAT,iBAAuBN,EAAvB,4BAA6CC,IADpC,uBACxBb,EADwB,EACxBA,KADwB,kBAGzBA,EAAKmB,SAHoB,2CAAH,sDAM/BpB,EAAmB2B,UAAU,CAC3Bd,GAAIe,IAAAA,KAAAA","sources":["webpack://goit-react-hw-05-movies/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"rew\":\"Reviews_rew__BfjKk\",\"name\":\"Reviews_name__kx3f+\"};","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getMovieReviewsReq } from 'services/api';\nimport s from './Reviews.module.css';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n\n  const { movieId } = useParams();\n  // console.log('movieId', movieId);\n\n  useEffect(() => {\n    const getMovieReviews = async () => {\n      try {\n        const data = await getMovieReviewsReq(movieId);\n        // console.log('data', data);\n        setReviews(data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getMovieReviews();\n  }, [movieId]);\n\n  return (\n    <>\n      {!reviews.length ? (\n        <p>This movie has no reviews yet</p>\n      ) : (\n        <ul className={s.cast}>\n          {reviews.map(item => (\n            <li key={item.id} className={s.rew}>\n              <p>\n                <span className={s.name}>{item.author}</span> posted{' '}\n                {item.created_at.slice(0, 10)}:\n              </p>\n              <p>{item.content}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\nimport PropTypes from 'prop-types'\n\nconst key = 'c4360f2fc66490777a6befee451fce21';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n});\n\nexport const getMoviesReq = async () => {\n  const { data } = await instance.get(`/trending/movie/day?api_key=${key}`);\n  // console.log('data', data);\n  return data.results;\n};\n\nexport const getMovieByIdReq = async id => {\n  const { data } = await instance.get(`/movie/${id}?api_key=${key}`);\n  // console.log('data mivie by id', data);\n  return data;\n};\n\nexport const getMoviesSearchReq = async query => {\n  const { data } = await instance.get(`/search/movie?api_key=${key}`, {\n    params: { query },\n  });\n  // console.log('data', data);\n  return data.results;\n};\n\nexport const getMovieCastReq = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits?api_key=${key}`);\n  // console.log('data', data);\n  return data.cast;\n};\n\nexport const getMovieReviewsReq = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews?api_key=${key}`);\n  // console.log('data', data);\n  return data.results;\n};\n\ngetMovieReviewsReq.propTypes={\n  id: PropTypes.func.isRequired\n}\n"],"names":["useState","reviews","setReviews","movieId","useParams","useEffect","getMovieReviews","getMovieReviewsReq","data","console","log","length","className","s","map","item","author","created_at","slice","content","id","key","instance","axios","baseURL","getMoviesReq","get","results","getMovieByIdReq","getMoviesSearchReq","query","params","getMovieCastReq","cast","propTypes","PropTypes"],"sourceRoot":""}